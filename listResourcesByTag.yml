---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda Function from Cloud Formation by Wolfgang Unger'
Resources:
  Lambda1:
    Type: "AWS::Lambda::Function"
    Properties:
        Code:
            ZipFile: >
              from boto3.session import Session
              from botocore.exceptions import ClientError
                  aws_access_key = ''
                  aws_secret_key = ''
                  region = ''
              def lambda_handler(event,context):
                  const util = require(‘util’);
                  console.log(“event: “, util.inspect(event, { showHidden: false, depth: null }));
                  try:
                     sess = Session(aws_access_key_id=aws_access_key, aws_secret_access_key=aws_secret_key)
                     ec2_conn = sess.client(service_name='ec2', region_name=region)
                     instance_ids = []
                     reservations = ec2_conn.describe_instances(
                                      Filters=[
                                                {
                                                    'Name': 'tag:Server_Group','Values': ['DevSecOps',]
                                                },
                                            ])['Reservations']
                   for reservation in reservations:
                      instances = reservation['Instances']
                      for instance in instances:
                            inti=1
                            console.log("Matching instance: ",inti," : ", instance)
                            inti=inti+1
                   except ClientError as e:
                   print(e)
        Description: Test with Cloud Formation
        FunctionName: listInstancesByTagVal
        Handler: index.lambda_handler
        Role: arn:aws:iam::357843261210:role/EC2_ReadOnly
        Runtime: python2.7
